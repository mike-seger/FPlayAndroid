apply plugin: 'com.android.application'

buildscript {
	repositories {
		google()
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath 'com.android.tools.build:gradle:3.1.3'
		//classpath 'com.android.tools.build:gradle:2.3.3'

		// NOTE: Do not place your application dependencies here; they belong
		// in the individual module build.gradle files
	}
}

allprojects {
	repositories {
		google()
		mavenCentral()
		jcenter()
	}
}

android {
	compileSdkVersion 23
	buildToolsVersion "29.0.2"

	flavorDimensions "default"

	productFlavors {
		traditional {
			applicationId "br.com.carlosrafaelgn.fplay"
			minSdkVersion 19
			targetSdkVersion 23
			buildConfigField 'boolean', 'X', 'false'
		}

		x {
			applicationId "br.com.carlosrafaelgn.fplay.x"
			minSdkVersion 19
			targetSdkVersion 23
			buildConfigField 'boolean', 'X', 'true'
		}
	}

	sourceSets {
		main {
			manifest.srcFile 'AndroidManifest.xml'
			assets.srcDirs = ['assets']
		}

		traditional {
			manifest.srcFile 'AndroidManifestTraditional.xml'
			java.srcDirs = ['src', 'src-traditional']
			resources.srcDirs = ['src', 'src-traditional']
			aidl.srcDirs = ['src', 'src-traditional']
			renderscript.srcDirs = ['src', 'src-traditional']
			res.srcDirs = ['res', 'res-traditional']
			jniLibs.srcDirs = ['libs']
		}

		x {
			java.srcDirs = ['src', 'src-x']
			resources.srcDirs = ['src', 'src-x']
			aidl.srcDirs = ['src', 'src-x']
			renderscript.srcDirs = ['src', 'src-x']
			res.srcDirs = ['res', 'res-x']
			jniLibs.srcDirs = ['libs', 'libs-x']
		}

		// Move the tests to tests/java, tests/res, etc...
		androidTest.setRoot('tests')

		// Move the build types to build-types/<type>
		// For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
		// This moves them out of them default location under src/<type>/... which would
		// conflict with src/ being used by the main source set.
		// Adding new build types or product flavors should be accompanied
		// by a similar customization.
		debug.setRoot('build-types/debug')
		release.setRoot('build-types/release')
	}

	buildTypes {
		release {
			minifyEnabled true
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-project.txt'
		}
	}

	lintOptions {
		abortOnError false
	}

}

dependencies {
	implementation fileTree(dir: 'libs', include: '*.jar')
}
